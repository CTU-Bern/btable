{smcl}
{* *! version 1.2.0 03oct2023}{...}
{hline}
{cmd:help btable_format} {right:also see:  {help btable}}
{hline}

{title:Title}

{phang}
{bf:btable_format} {hline 2} Formatting summary tables generated by {manhelp btable R:btable}


{marker syntax}{...}
{title:Syntax}

{p 9 17 2}
{opt btable_format} {cmd:using} {it:{help filename}} [{cmd:,} {it:options}]


{synoptset 39 tabbed}{...}
{synopthdr}
{synoptline}
{syntab:Input}
{p2coldent:* {cmdab:using} {it:{help filename}}}filename with results from {cmd: btable}{p_end}

{syntab:Main}
{synopt: {opt clear}}replace data in memory{p_end}
{synopt: {opt ncol:(header)}}creates a column with the number of non-missing observation called {it:header}{p_end}
{synopt: {opt nrows:(label)}}creates rows with the number of non-missing observations labelled {it:label}{p_end}
{synopt: {cmdab:drop(}{it:{help btable_format##colspec:colspec}}{cmd:)}}columns to drop from the output table{p_end}
{synopt: {opt nametot(string)}}name of the column with all entries, default is "Total"{p_end}
{synopt: {opt nrow:head}}inserts an extra row for the total number of observations {p_end}
{synopt:{cmdab:design(}{it:{help btable_format##designspec:designspec}}{cmd:)}}design of the table,
	{it:column} (default), {it:row} or {it:missing}{p_end}
{synopt: {opt inset(string)}}inset of category labels, default is "    " {p_end}
{synopt: {opt inset_row(string)}}inset of label in row design, default is " - " {p_end}
{synopt: {opt parse(string)}}parsing character for descriptives, effect measures or tests, default is "|" {p_end}
{synopt: {opt namemiss(string)}}name of the rows with missings, default is "missing"{p_end}
{synopt:{cmdab:nonmiss(}{it:{help btable_format##varspec:varspec}}{cmd:)}}suppresses row with missing 
	for specified variables {p_end}
	
{syntab:Descriptives}
{synopt:{cmdab:des:criptive(}{it:{help btable_format##descspec:descspec}}{cmd:)}}type and syntax 
	of descriptive statistics{p_end}
{synopt:{cmdab:format_desc(}{it:{help btable_format##formatspec:formatspec}}{cmd:)}}number format for descriptives{p_end}

{syntab:Effect measures}
{synopt:{cmdab:eff:ect(}{it:{help btable_format##effectspec:effectspec}}{cmd:)}}type and syntax
	of effect measures{p_end}
{synopt:{cmdab:format_effect(}{it:{help btable_format##formatspec:formatspec}}{cmd:)}}number format
	for effect measures {p_end}
{synopt: {opt perc:entage(rd mws)}}show risk differences ({it:rd}) or Mann-Whitney statistic ({it:mws})
	as perecentages{p_end}
{synopt: {opt abbr:eviation}}abbreviate effect measure name in table header and include footnote{p_end}

{syntab:Tests}
{synopt:{cmdab:test(}{it:{help btable_format##testspec:testspec}}{cmd:)}}test for differences between groups{p_end}
{synopt: {opth p_digits(numlist)}}digits for p-values{p_end}
{synopt: {opth p_breaks(nmulist)}}breakpoints between which digits are defined{p_end}
{synopt: {opt p_all}}show p-value for each category of categorical variables{p_end}

{syntab:Collapse categorical variables}
{synopt:{cmdab:collapse(}{it:{help btable_format##collapsespec:collapsespec}}{cmd:)}}list of categorical variables to be collapsed{p_end}
{synopt:{cmdab:collapselev(}{it:{help btable_format##collapselevspec:collapselevspec}}{cmd:)}}specifies 
	the level that should be kept after collapsing{p_end}
{synopt: {cmdab:nob:racket(}{it:{help btable_format##levellabels:levellabels}}{cmd:)}}do not show labels in brackets upon collapsing{p_end}

{syntab:Grouping of variables using header and inset}
{synopt:{cmdab:block(}{it:{help btable_format##blockspec:blockspec}}{cmd:)}}list of variables to be grouped, 
	separated by parsing character{p_end}
{synopt:{cmdab:block_head(}{it:{help btable_format##block_headspec:block_headspec}}{cmd:)}} header for each of 
	the groups defined in {it:block}, separated by same parsing character{p_end}
{synopt: {opth block_parse(string)}}parsing character to separate blocks, default is "|" {p_end}
{synopt: {opth block_inset(string)}}inset of variables in a block, default is "    " {p_end}

{syntab:Alternative formatting options**}
{synopt:{cmdab:digits(}{it:{help btable_format##digitsspec:digitsspec}}{cmd:)}}number of digits for descriptives{p_end}
{synopt:{cmdab:digits_effect(}{it:{help btable_format##digitsspec:digitsspec}}{cmd:)}}number of 
	digits for effect measures{p_end}
{synopt:{cmdab:digits_type(}{it:{help btable_format##digits_typespec:digits_typespec}}{cmd:)}}how 
	the number of digits is counted, either {it:decimals} or {it:sigdig}{p_end}
{synopt:{cmdab:digits_type_effect(}{it:{help btable_format##digits_typespec:digits_typespec}}{cmd:)}}how 
	the number of digits is counted for effect measures, either {it:decimals} or {it:sigdig}{p_end}
{synopt:{cmdab:maxdec(}{it:{help btable_format##maxdecspec:maxdecspec}}{cmd:)}}the maximal 
	number of decimal places{p_end}
{synopt:{cmdab:maxdec_effect(}{it:{help btable_format##maxdecspec:maxdecspec}}{cmd:)}}the maximal 
	number of decimal places for effect measures{p_end}
{synopt:{opth catd:igits0(numlist)}}forces specifc values to have 0 decimal places, 
	only for categorical variables{p_end}
	
{synoptline}
{p2colreset}{...}
{p 4 6 2}* {opt using filename} is required.{p_end}
{p 4 6 2}** Options are ignored if {cmd:format_desc} or {cmd:format_effect} are specified.{p_end}

{p 4 6 2}
See {manhelp btable R:btable} for generation of the raw summary table.


{marker description}{...}
{title:Description}

{pstd}
{cmd:btable_format} produces a formatted summary table with descriptives, effect measures 
	and p-values from the raw data summary generated by {cmd:btable}.

{pstd}
The descriptives (e.g. mean or median) and their syntax are selected 
	for a variable type (i.e. continuous, categorical, count or time-to-event)
	or individual variables via option {cmd:descriptive}.

{pstd}	
Effect measures are only available if {it:groupvar} used with {cmd:btable} has two levels and 
	should be accompanied by a confidence interval. 
	The types of the effect measures (e.g. mean difference or risk difference) and the confidence interval 
	are selected for a variable type (i.e. continuous, categorical, count or time-to-event)
	or individual variables via options {cmd:effect}.

{pstd}	
The number format for descriptives and effect measures is controlled via {cmd:format_desc} and {cmd:format_effect}.
	As an alternative, the number of decimal places or significant digits (depending on option {cmd:digits_type})
	can be given via {cmd:digits} and {cmd:digits_effect}.
	The default is to use 2 significant digits with a maximum of 2 decimal places.
	
{pstd}	
P-values are only available if {it:groupvar} used with {cmd:btable} had at least two levels.
	The test used is selected via {cmd:test}. The format of p-values is controlled
	via {cmd:p_digits} and {cmd:p_breaks}.
	
		 
{marker options}{...}
{title:Options}

{dlgtab:Main}

{phang}
{opt clear} replace the data in memory

{phang}
{opt ncol:(header)} creates a column with the number of non-missing observation called {it:header}.

{phang}
{opt nrows:(label)} creates rows with the number of non-missing observations for each variable. 
	The rows are labelled with {it:label}. 
	Needs {cmd:design} {cmd:row} or {cmd:missing} (cmd:row is used by default).

{marker colspec}{...}
{phang}
{opt drop:(colspec)} specifies columns to drop; {it:colspec} 
	may include {varlist} from the using file (not the original datafile), and any combination of 
	{cmd:total}, {cmd:effect}, {cmd:test} or {cmd:info}, 
	dropping columns with overall summary measures, effect measures, p-values or 
	the information about the applied measures, respectively.

{phang}	
{opt nametot(string)} defines the name of the column that contains all groups. The default is "Total". {p_end}
		
{phang}	
{opt nrow:head} inserts an extra row for the total number of observations. The default is to show it in brackets 
	after the column label. {p_end}
	
{marker designspec}{...}
{phang}{opt design(designspec)} specifies the design of the table. Option
	{cmd:column} (the default) shows the label of the descriptives in the column headers, 
	{cmd:row} in each row, and
	{cmd:missing} uses the row design but adds a row with the number of missings (if any). {p_end}

{phang}	
{opt inset(string)} defines by which characters the category labels should be inset in reference to the 
	label of the variable. The default is four spaces. For no inset {opt inset(none)} has to be used. {p_end}
		
{phang}	
{opt inset_row(string)} defines by which characters the variable labels are separated from the label of the 
	descriptive if {cmd:design} is {cmd:row} or {cmd:missing}. Has no effect if {cmd:design} is {cmd:column}. 
	The default is " - ". For no inset {opt inset_row(none)} has to be used. {p_end}
	
{phang}{opt parse(string)} specifies the parsing character used to separate descriptives and effect measures
	in {cmd:descriptive}, {cmd:effect} or {cmd:test} if more than one descriptive, effect or test should be used for 
	a specific variable or variable type. The default is "|". {p_end}	
		
{phang}	
{opt namemiss(string)} defines the name of the rows with missings if {cmd:design} is {cmd:missing}. 
	The default is "missing". {p_end}
	
{marker varspec}{...}
{phang}{opt nonmiss(varpec)} suppresses the row with missings (if {cmd:design} is {cmd:missing}) 
	for variables defined by {varlist} from the original datafile 
	(which corresponds to variable {it:varname} in the {cmd:using} file). 

{dlgtab:Descriptives}

{marker descspec}{...}
{phang}{opt des:criptive(descspec)} specifies type and format of the descriptive statistic for a variable category 
	(i.e. continuous, categorical, count or time-to-event), a specific variable defined by {varname} from 
	the original datafile (which corresponds to variable {it:varname} in the {cmd:using} file)
	or the rows with missings (if {cmd:design} is {it:missing}. 

{phang2}
{it:descspec} has the following syntax: {it:varspec statistic} [{it:varspec statistic} ...]

{pmore}
where {it:varspec} is {cmdab:cat}, {cmdab:conti}, {cmd:count}, {cmd:tte}, {it:varname} or {cmdab:miss}, 
	and {it:statistic} is any combination of the available descriptives (or further variables from the {cmd:using} file). 
	Available descriptives are:

{phang3}
	{cmd:ntot} (total number of observation),
	{cmd:mean}, {cmd:sd} (standard deviation), {cmd:meanlci} and {cmd:meanuci} (lower and upper confidence limits
	for the mean), {cmd:median}, {cmd:lq} (lower quartile), {cmd:uq} (upper quartile), {cmd:iqr} (interquartile range),
	{cmd:min}, {cmd:max}, {cmd:range} and {cmd:sum}	for continuous variables,
	
{phang3}			
	{cmd:nlev} (number of observation for the level), 
	{cmd:ntot} (total number of observation), 
	{cmd:perc} (percentage of total) and confidence intervals ({cmd:perclci} and {cmd:percuci}),
	and {cmd:prop} (proportion) and confidence intervals ({cmd:proplci} and {cmd:propuci})
	for categorical variables,
		
{phang3}
	{cmd:ntot} (total number of observation), 
	{cmd:nevents} (number of events), {cmd:etime} (exposure time), and 
	{cmd:ir} (incidence rate) and confidence intervals ({cmd:irlci} and {cmd:iruci}) for count variables,

{phang3}	
	{cmd:ntot} (total number of observation),		
	{cmd:nfails} (number of failures), {cmd:stime} (follow-up time), 
	{cmd:st50} (median survival time) and confidence intervals ({cmd:st50lci} and {cmd:st50uci}) or
	lower and upper quartile ({cmd:st25} and {cmd:st75}), and 
	{cmd:rmst} (restricted mean survival time) and confidence intervals ({cmd:rmstlci} and {cmd:rmstuci})
	for time-to-event variables and
	
{phang3}	
	{cmd:nlev} (number of missing observations), 
	{cmd:ntot} (total number of observation), 
	{cmd:perc} (percentage missing),
	and {cmd:prop} (proportion missing)
	for the rows with missing.
		
{pmore}		
The defaults are 
	mean (sd) for {it:varspec} {cmdab:conti},
	nlev (perc%) for {it:varspec} {cmdab:cat} and {it:varspec} {cmdab:miss},
	nevents (etime) for {it:varspec} {cmdab:count} and
	nfails (stime) for {it:varspec} {cmdab:tte}.
	
{pmore}	
Further variables in the {cmd:using} file can also be used, if they end with _t (total), _1, _2, ... (groups)---
	e.g. {it:stub}_t {it:stub}_1, {it:stub}_2, ... The {it:stub} can be used in {cmd:descriptive}.

{pmore}		
More than one descriptive statistic can be specified for a variable type or specific variable if {cmd:descriptive} contains 
	the parsing character defined in {cmd:parse}. In this case, the {cmd:design} has to be {it:row} or {it:missing}

{phang}{opt format_desc(formatsspec)} specifies the format of the descriptive.
	Can be defined for all variables (if {it:formatsspec} only includes {it:%fmt}),
	a variable category  (i.e. continuous, categorical, count or time-to-event), 
	a specific variable defined by {varname} from the original datafile,
	or the rows with missings (if {cmd:design} is {it:missing}).
	If not specified, 2 significant digits with a maximum of 2 decimal places are used (i.e. a modified %8.2g). 

{marker formatspec}{...}
{phang2}
{it:formatsspec} has the following syntax: 
{it:varspec %fmt} [{it:varspec %fmt} ...]

{pmore}
where {it:varspec} is {cmdab:conti}, {cmdab:cat}, {cmdab:count}, {cmdab:tte}, {it:varname} or {cmdab:miss},
	and %fmt is a format as defined in {it:{help format}} such as %#.#f or %#.#g.

{pmore}		
Several formats can be specified for a variable type or a specific variable if {cmd:format_desc} contains 
	the parsing character defined in {cmd:parse}. In this case, the {cmd:design} has to be {it:row} or {it:missing}.
	
{dlgtab:Effect measures}
	
{marker effectspec}{...}
{phang}{opt eff:ect(effectspec)} specifies the format and the type of the effect measures 
	for a variable category (i.e. continuous, categorical, count or time-to-event) or a specific variable defined by {varname} 
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using()} file).

{phang2}
{it:effectspec} has the following syntax: {it:varspec effectm} [{it:varspec effectm} ...]

{pmore}
where {it:varspec} is {cmdab:conti}, {cmdab:cat}, {cmd:count}, {cmd:tte}  or {varname}, and
{it:effectm} is any combination of the available effect measures and their confidence intervals or 
	any variable from the {cmd:using} file. 
	Available effect measures may include:

{phang3}	
{cmdab:meand}, {cmdab:meand_lci} and {cmdab:meand_uci} (mean difference and confidence interval),
{cmdab:medd}, {cmdab:medd_lci} and {cmdab:medd_uci} (median difference and confidence interval), 
{cmdab:mws}, {cmdab:mws_lci} and {cmdab:mws_uci} (Mann-Whitney statistic and confidence interval), and
{cmdab:hlmd}, {cmdab:hlmd_lci} and {cmdab:hlmd_uci} (Hodges-Lehmann median difference and confidence interval)
for continuous variables,
	
{phang3}
{cmdab:rd}, {cmdab:rd_lci} and {cmdab:rd_uci} (risk difference and confidence interval),
	{cmdab:rr}, {cmdab:rr_lci} and {cmdab:rr_uci} (risk ratio and confidence interval), and
	{cmdab:or}, {cmdab:or_lci} and {cmdab:or_uci} (odds ratio and confidence interval)
	for categorical variables, 
	
{phang3}	
{cmd:irr}, {cmd:irr_lci} and {cmd:irr_uci} (incidence rate ratio and confidence interval), and
	{cmd:ird}, {cmd:ird_lci} and {cmd:ird_uci} (incidence rate difference and confidence interval)
	for count variables,

{phang3}
{cmd:hr}, {cmd:hr_lci} and {cmd:hr_uci} (hazard ratio and confidence interval), and 
	{cmd:rmstd}, {cmd:rmstd_lci} and {cmd:rmstd_uci} (restricted mean survival time difference)
	for time-to-event variables,

{phang3}
{cmd:user_pe}, {cmd:user_lci} and {cmd:user_uci} for user-defined effect measure 
	if {cmd:user_name} is not given (otherwise the given names can be used).
		
{pmore}
The defaults are
	{cmd:effect}({it:conti} meand (meand_lci to meand_uci) 
	{it:cat} rd (rd_lci to rd_uci) 
	{it:count} irr (irr_lci to irr_uci) 
	{it:tte} hr (hr_lci to hr_uci)).
	
{pmore}
Any variable in the {cmd:using} file can be referred to by {it:effect}. All characters 
that are not recognized (as variable category, variable name from original file, or variable name from using) are left unchanged.
 
{pmore}	
More than one descriptive statistic can be specified for a variable type or specific variable if {cmd:effect} contains 
	the parsing character defined in {cmd:parse}. In this case, the {cmd:design} has to be {it:row} or {it:missing}
	
{phang}{opt format_effect(formatsspec)} specifies the format of the effect measure.
	Can be defined for all variables (if {it:formatsspec} only includes {it:%fmt}),
	a variable category (i.e. continuous, categorical, count or time-to-event), 
	or a specific variable defined by {varname} from the original datafile.
	If not specified, {cmd:format_desc} is also used for the effect measure. 
	
{phang}{opt perc:entage(rd mws)} show risk differences {cmd:rd} or the Mann-Whitney statistic {cmd:mws} or both 
	as percentages instead of the default fractions. {p_end}

{phang}{opt abbr:eviation} abbreviate effect measure name in header and include footnote for explanation.
	Abbreviations are MD for mean difference, MedD for median difference, HLMD for Hodges-Lehmann median differences, 
	MWS for the Mann-Whitney statistic, RD for risk difference, RR for risk ratio, OR for odds ratio,
	IRR for incidence rate ratio, IRD for incidence rate difference,
	HR for hazard ratio and RMSTD for restricted mean survival time difference. {p_end}

{dlgtab:Tests}
	
{marker testspec}{...}
{phang}{opt test(testspec)} specifies the type of the test for a variable category 
	(i.e. continuous, categorical, count or time-to-event) or a specific variable defined by {varname} 
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using} file). 
	
{phang2}
{it:testspec} has the following syntax: 
{it:varspec test} [{it:varspec test} ...] 

{pmore}
where {it:varspec} is {cmd:conti}, {cmd:cat}, {cmd:count} or {varname}, and 
{it:test} is {cmd:ttest} (Student's t-test), {cmd:ranksum} (Wilcoxon rank-sum test), {cmd:qreg} (median regression)
	 and - if {it:groupvar} has more than two levels - {cmd:anova} (ANOVA) and {cmd:kwallis} (Kruskal-Wallis test)
	 for continuous variables, 
	{cmd:fisher} (Fisher's exact test) and {cmd:chi2} (chi-squared test) for categorical variables,
	 {cmd:poisson} for count variables, and
	 {cmd:logrank} (log-rank test), {cmd:cox} (Wald-test from Cox model) 
	 and {cmd:rmstd} (Wald-test based on restricted mean survival time difference) for time-to-event variables.
	
{pmore}	
Defaults are {cmd:ttest} or {cmd:ranksum} for continuous variables 
	if the {cmd:descriptive} includes {it: mean} or {it:median}, respectively, 
	{cmd:fisher} for categorical variables,
	{cmd:poisson} for count variables, and
	{cmd:logrank} for time-to-event variables.
	
{pmore}	
Any variable in the {cmd:using} file can be referred to by {it:test}.
  
{pmore}	
More than one descriptive statistic can be specified for a variable type or specific variable if {cmd:test} contains 
	the parsing character defined in {cmd:parse}. In this case, the {cmd:design} has to be {it:row} or {it:missing}
	
{phang}{opt p_digits(numlist)} specifies the number of decimal places for the p-values. If one number is given
		all p-values will have the same number of decimal places. If more than one number is given, 
		option {it:p_breaks} has to be specified to define a range for each number in {it:p_digits}.
		The number of digits needs to correspond to the number of breaks - 1. See below for defaults. {p_end}
		
{phang}{opt p_breaks(numlist)} specifies the range of p-values for which the number of decimal places
	is given by {it:p_digits}. Has to be strictly monotone, i.e. either increasing or decreasing. 
	The largest number should be 1, otherwise a 1 will be added automatically. The lowest number will be presented with
	a "<" and does not need a specification of the digits. The length of {it:p_breaks}
	has to correspond the the length of {it:p_digits} + 1 (unless the 1 is not included in {it:p_breaks}, then 
	they have to be of the same length.)

{pmore}	
Defaults are p_digits(2 3) and p_breaks(1 0.05 0.001), i.e. two decimal places for p-values 
	larger than (or equal to) 0.05, three decimal places for those between 0.001 and 0.05,
	and "<0.001" for those below 0.001. {p_end}
	
{dlgtab:Collapse categorical variables}
	
{marker collapsespec}{...}
{phang}{opth collapse(collapsespec)} specifies variables that should be collapsed according to their {varname} 
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using()} file).
	Collapsed variables are shown on one line with the level in brackets. 
	The option is only valid for categorical variables with one or two levels.
	Allows for wildcards in variable names. {p_end}
	
{marker collapselevspec}{...}	
{phang}{opt collapselev(collapselevspec)} specifies the level that should be kept after collapsing 
	(i.e. either 1 or 2, with 1 beeing the level with the lower number in the original dataset). 
	The level name is then shown in brackets.
	Can be defined for all variables (if {it:collapselevspec} is #, or
	for a specific variable defined by {varname} from the original datafile.

{phang2}
The syntax is then:
{it:varname #} [{it:varname #} ...]
	
{marker levellabels}{...}	
{phang}{opt nob:racket(levellabels)} specifes which level labels should not be shown in brackets upon collapsing.{p_end}

{dlgtab:Grouping of variables using header and inset}

{marker blockspec}{...}
{phang}{opt block(blockspec)} specifies variables that should be grouped in a block with a common header and inset 
	according to their {varname} from the original datafile (which corresponds to variable {it:varname} in the {cmd:using} file).
	Variables will be sorted according to the order in {it:blockspec}. The first variable serves as anchor.
	Different blocks are seperated by a parsing character ({it:"pchar"}, specified by {cmd:block_parse}). 

{phang2}	
The syntax is then: {varlist} [{it:"pchar"} {varlist} ...]

{marker block_headspec}{...}
{phang}{opt block_head(block_headspec)} specifies the headers for each block, separated by the parsing character specified 
	by {cmd:block_parse}. The number of headers has to match the number of blocks defined in {cmd:block}. {p_end}

{phang}{opt block_parse(string)} specifies the parsing character used to separate variables in different blocks 
	in {cmd:block} and headers in {cmd:block_header}. The default is "|". {p_end}	
	
{phang}{opt block_inset(string)} defines by which characters variables specified in {cmd:block} should be inset in 
	reference to the block header. The default is "    ". For no inset {opt block_inset(none)} has to be used. {p_end}	
	
{dlgtab:Alternative formatting options}
	
{marker digitsspec}{...}
{phang}{opt digits(digitsspec)} specifies the digits of the descriptive for a variable category 
	(i.e. continuous, categorical, count or time-to-event), a specific variable defined by {varname} from the original datafile
	(which corresponds to variable {it:varname} in the {cmd:using} file) 
	or the rows with missings (if {cmd:design} is {it:missing}).
	Depending on option {cmd:digits_type} the number of digits refers to decimal places or significant digits.
	Only has an effect if {cmd:format_desc} is not given.

{phang2}
{it:digitsspec} has the following syntax: 
{it:varspec #} [{it:varspec #} ...]

{pmore}
where {it:varspec} is {cmdab:conti}, {cmdab:cat}, {cmdab:count}, {cmdab:tte}, {it:varname} or {cmdab:miss},
	and # is the number of digits. {p_end}

{pmore}		
Several number of digits can be specified for a variable type or a specific variable if {cmd:digits} contains 
	the parsing character defined in {cmd:parse}. In this case, the {cmd:design} has to be {it:row} or {it:missing}
	
{marker digits_effectspec}{...}
{phang}{opt digits_effect(digitsspec)} specifies the digits of the effect measure for 
	a variable category (i.e. continuous, categorical, count or time-to-event) or a specific variable defined by {varname} 
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using()} file).
	See {it:{help btable_format##digitsspec:digitsspec}} for the syntax. 
	Only has an effect if {cmd:format_effect} is not given.

{marker digits_typespec}{...}
{phang}{opt digits_type(digits_typespec)} specifies how the number of digits is counted, either {cmd:decimals} 
	(the number of decimal places) or {cmd:sigdig} (the number of significant digits).
	Can be defined for all variables (if {it:digits_typespec} is just {cmd:decimals} or {cmd:sigdig}), or 
	for a variable category (i.e. continuous, categorical, count or time-to-event),
	a specific variable defined by {varname} 
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using()} file)
	or the rows with missings (if {cmd:design} is {it:missing}).
	Only has an effect if {cmd:format_desc} is not given.

{phang2}
The syntax is then:
{it:varspec digoption} [{it:varspec digoption} ...]

{pmore}
where {it:varspec} is {cmdab:conti}, {cmdab:cat}, {cmd:count}, {cmd:tte}, {it:varname} or {cmdab:miss}, 
	and {it: digoption} is {cmd:decimals} or {cmd:sigdig}. 

{pmore}
The default is decimals of {it:digits} is specified, otherwise 2 significant digits are used 
	with a maximum of 2 decimal places. {p_end}

{pmore}		
Several digits types can be specified for a variable type or a specific variable if {cmd:digits_type} 
	contains  the parsing character defined in {cmd:parse}. 
	In this case, the {cmd:design} has to be {it:row} or {it:missing}

{marker digits_type_effectspec}{...}
{phang}{opt digits_type_effect(digits_typespec)} specifies how the number of digits is counted
	for effect measures, either {cmd:decimals} 
	(the number of decimal places) or {cmd:sigdig} (the number of significant digits).
	Can be defined for all variables (if {it:digits_typespec} is just {cmd:decimals} or {cmd:sigdig}), or 
	for a variable category (i.e. continuous, categorical, count or time-to-event) or
	a specific variable defined by {varname} 
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using()} file).
	Only has an effect if {cmd:format_conti} is not given.
	
{marker maxdecspec}{...}	
{phang}{opt maxdec(maxdecspec)} specifies the maximal number of decimal places.
	Can be defined for all variables (if {it:maxdecspec} is #, or
	for a variable category (i.e. continuous, categorical, count or time-to-event),
	a specific variable defined by {varname}
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using} file))
	or the rows with missings (if {cmd:design} is {it:missing}).
	Only has an effect if {cmd:format_conti} is not given.

{phang2}
The syntax is then:
{it:varspec #} [{it:varspec #} ...]

{pmore}
where {it:varspec} is {cmdab:conti}, {cmdab:cat}, {cmd:count}, {cmd:tte}, {varname} or {cmdab:miss}.
	The default is 2. {p_end}
	
{pmore}		
Several maximal number of digits can be specified for a variable type or a specific variable if {cmd:maxdec} 
	contains  the parsing character defined in {cmd:parse}. 
	In this case, the {cmd:design} has to be {it:row} or {it:missing}

{marker maxdec_effectspec}{...}	
{phang}{opt maxdec_effect(maxdecspec)} specifies the maximal number of decimal places for effect measures.
	Can be defined for all variables (if {it:maxdecspec} is #, or
	for a variable category (i.e. continuous, categorical, count or time-to-event) or
	a specific variable defined by {varname}
	from the original datafile (which corresponds to variable {it:varname} in the {cmd:using} file).
	See {it:{help btable_format##maxdecspec:maxdecspec}} for the syntax. 
	If not given, {cmd:maxdec} is also used for the effect measure. 
	
	
{phang}{opt catd:igits0(numlist)} forces values specified in numlist to have 0 decimal 
	places. Only valid for categorical variables, usually used for 0, 1 (if proportion is given) or 100 (if 
	percentage is given). Does not apply to nlev and ntot, which are always show without decimal places 
	(if they are integers). {p_end}
	
{marker examples}{...}
{title:Examples}

{pstd}Data{p_end}
{phang}{cmd:. sysuse auto2}{p_end}

{pstd}Generate table {p_end}
{phang}{cmd:. btable price mpg rep78 headroom, by(foreign) saving("excars") denom(nonmiss)}{p_end}

{pstd}Format table {p_end}

{phang}{cmd:. btable_format using "excars", clear}{p_end}

{phang}{cmd:. btable_format using "excars", clear descriptive(conti median [lq, uq]) drop(total effect)}{p_end}

{phang}{cmd:. btable_format using "excars", clear desc(conti median [lq, uq] mpg mean (sd)) drop(total effect)}{p_end}

{phang}{cmd:. btable_format using "excars", clear ncol(non-missing) drop(total effect info)}{p_end}

{phang}{cmd:. btable_format using "excars", clear nrows(non-missing) design(row) drop(total effect info)}{p_end}

{phang}{cmd:. btable_format using "excars", clear design(missing) drop(total effect info)}{p_end}

{phang}{cmd:. btable_format using "excars", clear format_desc("%10.2f") drop(total effect)}{p_end}

{phang}{cmd:. btable_format using "excars", clear  format_desc(price "%10.0f" conti "%10.2f" cat "%10.1f") drop(total effect)}{p_end}

{phang}{cmd:. btable_format using "excars", clear drop(total) desc(conti median [lq, uq]) effect(conti mws (mws_lci to mws_uci)) abbr}{p_end}

{phang}{cmd:. btable_format using "excars", clear drop(total) desc(conti median (lq - uq) mpg mean ± sd) effect(conti mws (mws_lci to mws_uci) mpg meand [meand_lci to meand_uci]) abbr}{p_end}

{phang}{cmd:. btable_format using "excars", clear desc(conti mean (sd) | conti median [lq, uq]) parse(|) design(row) drop(total effect)}{p_end}

{phang}{cmd:. btable_format using "excars", clear block(mpg headroom price | rep78) block_head(Continuous variables | Categorical variables) drop(total info)}

